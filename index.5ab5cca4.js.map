{"mappings":"ACGA,IAmDQ,EAmDA,EAtGF,EAAc,SAAS,gBAAgB,CAAC,MAExC,EAAkB,MAAM,IAAI,CADf,SAAS,gBAAgB,CAAC,aAEvC,EAAU,SAAS,aAAa,CAAC,QACjC,EAAQ,SAAS,aAAa,CAAC,SAEjC,EAAwB,KACxB,EAAQ,CAAA,EAuGiB,GAzD3B,CAFM,EAAO,SAAS,aAAa,CAAC,SAE/B,SAAS,CAAC,GAAG,CAAC,qBAEnB,AA9CmB,CACnB,CACE,MAAO,SACP,KAAM,OACN,KAAM,OACN,SAAU,CAAA,CACZ,EACA,CACE,MAAO,aACP,KAAM,WACN,KAAM,OACN,SAAU,CAAA,CACZ,EACA,CACE,MAAO,WACP,KAAM,SACN,KAAM,SACN,QAAS,CACP,QACA,YACA,SACA,WACA,WACA,gBACD,CACD,SAAU,CAAA,CACZ,EACA,CACE,MAAO,QACP,KAAM,MACN,KAAM,SACN,SAAU,CAAA,CACZ,EACA,CACE,MAAO,WACP,KAAM,SACN,KAAM,SACN,SAAU,CAAA,CACZ,EACD,CAOc,OAAO,CAAC,SAAC,CAAtB,EACE,IAcI,EAdE,EAAY,SAAS,aAAa,CAAC,MAEzC,CAAA,EAAU,KAAK,CAAC,OAAO,CAAG,OAC1B,EAAU,KAAK,CAAC,UAAU,CAAG,SAC7B,EAAU,KAAK,CAAC,YAAY,CAAG,OAE/B,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,WAAW,CAAG,EAAO,KAAK,CAChC,EAAM,YAAY,CAAC,MAAO,EAAO,IAAI,EAErC,EAAM,KAAK,CAAC,WAAW,CAAG,OAC1B,EAAM,KAAK,CAAC,KAAK,CAAG,QAIhB,AAAgB,WAAhB,EAAO,IAAI,EACb,EAAQ,SAAS,aAAa,CAAC,UAE/B,EAAO,OAAO,CAAC,OAAO,CAAC,SAAC,CAAxB,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,SAEtC,CAAA,EAAO,KAAK,CAAG,EACf,EAAO,WAAW,CAAG,EACrB,EAAM,WAAW,CAAC,EACpB,IAGA,AADA,CAAA,EAAQ,SAAS,aAAa,CAAC,QAA/B,EACM,IAAI,CAAG,EAAO,IAAI,CAG1B,EAAM,IAAI,CAAG,EAAO,IAAI,CACxB,EAAM,EAAE,CAAG,EAAO,IAAI,CACtB,EAAM,OAAO,CAAC,EAAE,CAAG,EAAO,IAAI,CAE1B,EAAO,QAAQ,EACjB,CAAA,EAAM,QAAQ,CAAG,CAAA,CADnB,EAIA,EAAM,KAAK,CAAC,IAAI,CAAG,IAEnB,EAAU,WAAW,CAAC,GACtB,EAAU,WAAW,CAAC,GACtB,EAAK,WAAW,CAAC,EACnB,GAIA,CAFM,EAAS,SAAS,aAAa,CAAC,WAE/B,WAAW,CAAG,gBACrB,EAAK,WAAW,CAAC,GAEV,CAAE,KAAA,EAAM,WAAY,CAAO,GAG5B,EAAqB,EAArB,IAAA,CAAM,EAAe,EAAf,UAAd,CAEA,EAAQ,WAAW,CAAC,GAEpB,EAAgB,OAAO,CAAC,SAAC,CAAzB,EACE,EAAI,gBAAgB,CAAC,QAAS,WAC5B,EAAgB,OAAO,CAAC,SAAC,CAAzB,EAA+B,OAAA,EAAE,SAAS,CAAC,MAAM,CAAC,S,GAClD,EAAI,SAAS,CAAC,GAAG,CAAC,SACpB,EACF,GAEA,EAAY,OAAO,CAAC,SAAC,CAArB,EACE,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,IAAM,EAAW,EAAE,MAAM,CAAC,SAAS,CAGjC,EADE,IAA0B,GACpB,CAAC,EAKX,EAAwB,EAExB,AAiFJ,SAAoB,CAAM,CAAE,CAAQ,EAClC,EAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAhB,EACE,IAAM,EAAY,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAS,CAAC,WAAW,CAC1D,EAAY,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAS,CAAC,WAAW,CAEhE,GAAI,AAAa,IAAb,GAAkB,AAAa,IAAb,GAAkB,AAAa,IAAb,SACtC,AAAI,EACK,EAAU,aAAa,CAAC,GAExB,EAAU,aAAa,CAAC,GAInC,GAAI,AAAa,IAAb,GAAkB,AAAa,IAAb,EAAgB,CACpC,IAAM,EAAO,WAAW,EAAU,OAAO,CAAC,aAAc,KAClD,EAAO,WAAW,EAAU,OAAO,CAAC,aAAc,YAExD,AAAI,EACK,EAAO,EAEP,EAAO,CAElB,CACF,GAEA,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,GAElB,EAAO,OAAO,CAAC,SAAC,CAAhB,EACE,EAAM,WAAW,CAAC,EACpB,EACF,EAjHe,EAAiB,EAC9B,EACF,GAEA,EAAW,gBAAgB,CAAC,QAAS,SAAC,CAAtC,EAGE,GAFA,EAAE,cAAc,GAEZ,CAAC,EAAK,aAAa,GAAI,CACzB,EACE,IACA,GACA,aACA,uCACA,SAGF,MACF,CAEA,IAAM,EAAe,EAAK,aAAa,CAAC,iBAAiB,KAAK,CACxD,EAAW,EAAK,aAAa,CAAC,qBAAqB,KAAK,CACxD,EAAS,EAAK,aAAa,CAAC,mBAAmB,KAAK,CACpD,EAAM,EAAK,aAAa,CAAC,gBAAgB,KAAK,CAE9C,EAAS,AADK,WAAW,EAAK,aAAa,CAAC,mBAAmB,KAAK,EAC/C,cAAc,CAAC,QAAS,CACjD,MAAO,WACP,SAAU,MACV,sBAAuB,CACzB,GAEA,GAAI,EAAa,MAAM,CAAG,EAAG,CAC3B,EACE,IACA,GACA,aACA,qCACA,SAGF,MACF,CAEA,GAAI,EAAM,IAAM,EAAM,GAAI,CACxB,EACE,IACA,GACA,YACA,4CACA,SAGF,MACF,CAEA,IAAM,EAAS,SAAS,aAAa,CAAC,MAChC,EAAS,SAAS,aAAa,CAAC,MAChC,EAAa,SAAS,aAAa,CAAC,MACpC,EAAW,SAAS,aAAa,CAAC,MAClC,EAAQ,SAAS,aAAa,CAAC,MAC/B,EAAW,SAAS,aAAa,CAAC,KAExC,CAAA,EAAO,WAAW,CAAG,EACrB,EAAW,WAAW,CAAG,EACzB,EAAS,WAAW,CAAG,EACvB,EAAM,WAAW,CAAG,EACpB,EAAS,WAAW,CAAG,EAEvB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAM,WAAW,CAAC,GAElB,EAAgB,IAAI,CAAC,GAErB,EAAiB,IAAK,GAAI,SAAU,4BAA6B,WAEjE,EAAK,KAAK,EACZ,GAoCA,IAAM,EAAmB,SAAC,CAAA,CAAQ,CAAA,CAAU,CAAA,CAAO,CAAA,CAAa,CAAhE,EACE,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,KAAK,CAAC,GAAG,CAAG,EAAS,KAC7B,EAAQ,KAAK,CAAC,KAAK,CAAG,EAAW,KAEjC,EAAQ,SAAS,CAAC,GAAG,CAAC,eAAgB,GACtC,EAAQ,YAAY,CAAC,UAAW,gBAEhC,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,SAEtB,EAAQ,WAAW,CAAG,EAEtB,IAAM,EAAO,SAAS,aAAa,CAAC,IAEpC,CAAA,EAAK,WAAW,CAAG,EAEnB,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,GAEpB,WAAW,WACT,EAAQ,KAAK,CAAC,OAAO,CAAG,MAC1B,EAAG,IACL","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable */ \"use strict\";\nvar headerTitle = document.querySelectorAll(\"th\");\nvar sortedRows = document.querySelectorAll(\"tbody tr\");\nvar sortedRowsToArr = Array.from(sortedRows);\nvar docBody = document.querySelector(\"body\");\nvar tBody = document.querySelector(\"tbody\");\nvar lastSortedColumnIndex = null;\nvar isAsc = true;\nvar inputsConfig = [\n    {\n        label: \"Name: \",\n        name: \"name\",\n        type: \"text\",\n        required: true\n    },\n    {\n        label: \"Position: \",\n        name: \"position\",\n        type: \"text\",\n        required: true\n    },\n    {\n        label: \"Office: \",\n        name: \"office\",\n        type: \"select\",\n        options: [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New-York\",\n            \"Edinburg\",\n            \"San Francisco\"\n        ],\n        required: true\n    },\n    {\n        label: \"Age: \",\n        name: \"age\",\n        type: \"number\",\n        required: true\n    },\n    {\n        label: \"Salary: \",\n        name: \"salary\",\n        type: \"number\",\n        required: true\n    }\n];\nfunction createForm(inputsConfigs) {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    inputsConfig.forEach(function(config) {\n        var formGroup = document.createElement(\"div\");\n        formGroup.style.display = \"flex\";\n        formGroup.style.alignItems = \"center\";\n        formGroup.style.marginBottom = \"10px\";\n        var label = document.createElement(\"label\");\n        label.textContent = config.label;\n        label.setAttribute(\"for\", config.name);\n        label.style.marginRight = \"10px\";\n        label.style.width = \"100px\";\n        var input;\n        if (config.type === \"select\") {\n            input = document.createElement(\"select\");\n            config.options.forEach(function(optionValue) {\n                var option = document.createElement(\"option\");\n                option.value = optionValue;\n                option.textContent = optionValue;\n                input.appendChild(option);\n            });\n        } else {\n            input = document.createElement(\"input\");\n            input.type = config.type;\n        }\n        input.name = config.name;\n        input.id = config.name;\n        input.dataset.qa = config.name;\n        if (config.required) input.required = true;\n        input.style.flex = \"1\";\n        formGroup.appendChild(label);\n        formGroup.appendChild(input);\n        form.appendChild(formGroup);\n    });\n    var button = document.createElement(\"button\");\n    button.textContent = \"Save to table\";\n    form.appendChild(button);\n    return {\n        form: form,\n        formButton: button\n    };\n}\nvar _createForm = createForm(inputsConfig), form = _createForm.form, formButton = _createForm.formButton;\ndocBody.appendChild(form);\nsortedRowsToArr.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        sortedRowsToArr.forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nheaderTitle.forEach(function(head) {\n    head.addEventListener(\"click\", function(e) {\n        var indexRow = e.target.cellIndex;\n        if (lastSortedColumnIndex === indexRow) isAsc = !isAsc;\n        else isAsc = true;\n        lastSortedColumnIndex = indexRow;\n        sortedSort(sortedRowsToArr, indexRow);\n    });\n});\nformButton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    if (!form.checkValidity()) {\n        pushNotification(500, 10, \"Form Error\", \"Please fill out all required fields.\", \"error\");\n        return;\n    }\n    var employeeName = form.querySelector('[name=\"name\"]').value;\n    var position = form.querySelector('[name=\"position\"]').value;\n    var office = form.querySelector('[name=\"office\"]').value;\n    var age = form.querySelector('[name=\"age\"]').value;\n    var salaryValue = parseFloat(form.querySelector('[name=\"salary\"]').value);\n    var salary = salaryValue.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0\n    });\n    if (employeeName.length < 4) {\n        pushNotification(500, 10, \"Wrong name\", \"Name must be longer than 3 symbols\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        pushNotification(500, 10, \"Wrong age\", \"Age must be more than 18 and less than 90\", \"error\");\n        return;\n    }\n    var newRow = document.createElement(\"tr\");\n    var tdName = document.createElement(\"td\");\n    var tdPosition = document.createElement(\"td\");\n    var tdOffice = document.createElement(\"td\");\n    var tdAge = document.createElement(\"td\");\n    var tdSalary = document.createElement(\"td\");\n    tdName.textContent = employeeName;\n    tdPosition.textContent = position;\n    tdOffice.textContent = office;\n    tdAge.textContent = age;\n    tdSalary.textContent = salary;\n    newRow.appendChild(tdName);\n    newRow.appendChild(tdPosition);\n    newRow.appendChild(tdOffice);\n    newRow.appendChild(tdAge);\n    newRow.appendChild(tdSalary);\n    tBody.appendChild(newRow);\n    sortedRowsToArr.push(newRow);\n    pushNotification(500, 10, \"Great!\", \"Employee add to the table\", \"success\");\n    form.reset();\n});\nfunction sortedSort(titles, indexRow) {\n    titles.sort(function(a, b) {\n        var cellTextA = a.querySelectorAll(\"td\")[indexRow].textContent;\n        var cellTextB = b.querySelectorAll(\"td\")[indexRow].textContent;\n        if (indexRow === 0 || indexRow === 1 || indexRow === 2) {\n            if (isAsc) return cellTextA.localeCompare(cellTextB);\n            else return cellTextB.localeCompare(cellTextA);\n        }\n        if (indexRow === 3 || indexRow === 4) {\n            var numA = parseFloat(cellTextA.replace(/[^0-9.-]+/g, \"\"));\n            var numB = parseFloat(cellTextB.replace(/[^0-9.-]+/g, \"\"));\n            if (isAsc) return numA - numB;\n            else return numB - numA;\n        }\n    });\n    var bodyT = document.querySelector(\"tbody\");\n    bodyT.innerHTML = \"\";\n    titles.forEach(function(row) {\n        bodyT.appendChild(row);\n    });\n}\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var element = document.createElement(\"div\");\n    element.style.top = posTop + \"px\";\n    element.style.right = posRight + \"px\";\n    element.classList.add(\"notification\", type);\n    element.setAttribute(\"data-qa\", \"notification\");\n    var message = document.createElement(\"h2\");\n    message.classList.add(\"title\");\n    message.textContent = title;\n    var text = document.createElement(\"p\");\n    text.textContent = description;\n    element.appendChild(message);\n    element.appendChild(text);\n    docBody.appendChild(element);\n    setTimeout(function() {\n        element.style.display = \"none\";\n    }, 2000);\n};\n\n//# sourceMappingURL=index.5ab5cca4.js.map\n","/* eslint-disable */\n'use strict';\n\nconst headerTitle = document.querySelectorAll('th');\nconst sortedRows = document.querySelectorAll('tbody tr');\nconst sortedRowsToArr = Array.from(sortedRows);\nconst docBody = document.querySelector('body');\nconst tBody = document.querySelector('tbody');\n\nlet lastSortedColumnIndex = null;\nlet isAsc = true;\n\nconst inputsConfig = [\n  {\n    label: 'Name: ',\n    name: 'name',\n    type: 'text',\n    required: true,\n  },\n  {\n    label: 'Position: ',\n    name: 'position',\n    type: 'text',\n    required: true,\n  },\n  {\n    label: 'Office: ',\n    name: 'office',\n    type: 'select',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New-York',\n      'Edinburg',\n      'San Francisco',\n    ],\n    required: true,\n  },\n  {\n    label: 'Age: ',\n    name: 'age',\n    type: 'number',\n    required: true,\n  },\n  {\n    label: 'Salary: ',\n    name: 'salary',\n    type: 'number',\n    required: true,\n  },\n];\n\nfunction createForm(inputsConfigs) {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  inputsConfig.forEach((config) => {\n    const formGroup = document.createElement('div');\n\n    formGroup.style.display = 'flex';\n    formGroup.style.alignItems = 'center';\n    formGroup.style.marginBottom = '10px';\n\n    const label = document.createElement('label');\n\n    label.textContent = config.label;\n    label.setAttribute('for', config.name);\n\n    label.style.marginRight = '10px';\n    label.style.width = '100px';\n\n    let input;\n\n    if (config.type === 'select') {\n      input = document.createElement('select');\n\n      config.options.forEach((optionValue) => {\n        const option = document.createElement('option');\n\n        option.value = optionValue;\n        option.textContent = optionValue;\n        input.appendChild(option);\n      });\n    } else {\n      input = document.createElement('input');\n      input.type = config.type;\n    }\n\n    input.name = config.name;\n    input.id = config.name;\n    input.dataset.qa = config.name;\n\n    if (config.required) {\n      input.required = true;\n    }\n\n    input.style.flex = '1';\n\n    formGroup.appendChild(label);\n    formGroup.appendChild(input);\n    form.appendChild(formGroup);\n  });\n\n  const button = document.createElement('button');\n\n  button.textContent = 'Save to table';\n  form.appendChild(button);\n\n  return { form, formButton: button };\n}\n\nconst { form, formButton } = createForm(inputsConfig);\n\ndocBody.appendChild(form);\n\nsortedRowsToArr.forEach((row) => {\n  row.addEventListener('click', () => {\n    sortedRowsToArr.forEach((r) => r.classList.remove('active'));\n    row.classList.add('active');\n  });\n});\n\nheaderTitle.forEach((head) => {\n  head.addEventListener('click', (e) => {\n    const indexRow = e.target.cellIndex;\n\n    if (lastSortedColumnIndex === indexRow) {\n      isAsc = !isAsc;\n    } else {\n      isAsc = true;\n    }\n\n    lastSortedColumnIndex = indexRow;\n\n    sortedSort(sortedRowsToArr, indexRow);\n  });\n});\n\nformButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  if (!form.checkValidity()) {\n    pushNotification(\n      500,\n      10,\n      'Form Error',\n      'Please fill out all required fields.',\n      'error',\n    );\n\n    return;\n  }\n\n  const employeeName = form.querySelector('[name=\"name\"]').value;\n  const position = form.querySelector('[name=\"position\"]').value;\n  const office = form.querySelector('[name=\"office\"]').value;\n  const age = form.querySelector('[name=\"age\"]').value;\n  const salaryValue = parseFloat(form.querySelector('[name=\"salary\"]').value);\n  const salary = salaryValue.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n\n  if (employeeName.length < 4) {\n    pushNotification(\n      500,\n      10,\n      'Wrong name',\n      'Name must be longer than 3 symbols',\n      'error',\n    );\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(\n      500,\n      10,\n      'Wrong age',\n      'Age must be more than 18 and less than 90',\n      'error',\n    );\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n  const tdName = document.createElement('td');\n  const tdPosition = document.createElement('td');\n  const tdOffice = document.createElement('td');\n  const tdAge = document.createElement('td');\n  const tdSalary = document.createElement('td');\n\n  tdName.textContent = employeeName;\n  tdPosition.textContent = position;\n  tdOffice.textContent = office;\n  tdAge.textContent = age;\n  tdSalary.textContent = salary;\n\n  newRow.appendChild(tdName);\n  newRow.appendChild(tdPosition);\n  newRow.appendChild(tdOffice);\n  newRow.appendChild(tdAge);\n  newRow.appendChild(tdSalary);\n  tBody.appendChild(newRow);\n\n  sortedRowsToArr.push(newRow);\n\n  pushNotification(500, 10, 'Great!', 'Employee add to the table', 'success');\n\n  form.reset();\n});\n\nfunction sortedSort(titles, indexRow) {\n  titles.sort((a, b) => {\n    const cellTextA = a.querySelectorAll('td')[indexRow].textContent;\n    const cellTextB = b.querySelectorAll('td')[indexRow].textContent;\n\n    if (indexRow === 0 || indexRow === 1 || indexRow === 2) {\n      if (isAsc) {\n        return cellTextA.localeCompare(cellTextB);\n      } else {\n        return cellTextB.localeCompare(cellTextA);\n      }\n    }\n\n    if (indexRow === 3 || indexRow === 4) {\n      const numA = parseFloat(cellTextA.replace(/[^0-9.-]+/g, ''));\n      const numB = parseFloat(cellTextB.replace(/[^0-9.-]+/g, ''));\n\n      if (isAsc) {\n        return numA - numB;\n      } else {\n        return numB - numA;\n      }\n    }\n  });\n\n  const bodyT = document.querySelector('tbody');\n\n  bodyT.innerHTML = '';\n\n  titles.forEach((row) => {\n    bodyT.appendChild(row);\n  });\n}\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const element = document.createElement('div');\n\n  element.style.top = posTop + 'px';\n  element.style.right = posRight + 'px';\n\n  element.classList.add('notification', type);\n  element.setAttribute('data-qa', 'notification');\n\n  const message = document.createElement('h2');\n\n  message.classList.add('title');\n\n  message.textContent = title;\n\n  const text = document.createElement('p');\n\n  text.textContent = description;\n\n  element.appendChild(message);\n  element.appendChild(text);\n  docBody.appendChild(element);\n\n  setTimeout(() => {\n    element.style.display = 'none';\n  }, 2000);\n};\n"],"names":["form","button","headerTitle","document","querySelectorAll","sortedRowsToArr","Array","from","docBody","querySelector","tBody","lastSortedColumnIndex","isAsc","_createForm","createElement","classList","add","inputsConfig","label","name","type","required","options","forEach","config","input","formGroup","style","display","alignItems","marginBottom","textContent","setAttribute","marginRight","width","optionValue","option","value","appendChild","id","dataset","qa","flex","formButton","row","addEventListener","r","remove","head","e","indexRow","target","cellIndex","sortedSort","titles","sort","a","b","cellTextA","cellTextB","localeCompare","numA","parseFloat","replace","numB","bodyT","innerHTML","preventDefault","checkValidity","pushNotification","employeeName","position","office","age","salary","salaryValue","toLocaleString","currency","minimumFractionDigits","length","newRow","tdName","tdPosition","tdOffice","tdAge","tdSalary","push","reset","posTop","posRight","title","description","element","top","right","message","text","setTimeout"],"version":3,"file":"index.5ab5cca4.js.map"}